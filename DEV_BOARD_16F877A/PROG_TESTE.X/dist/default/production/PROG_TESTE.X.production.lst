

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Feb 28 09:49:38 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0006                     _PORTBbits	set	6
   171     0018                     _RCSTAbits	set	24
   172     0009                     _PORTE	set	9
   173     0008                     _PORTD	set	8
   174     0007                     _PORTC	set	7
   175     0006                     _PORTB	set	6
   176     0005                     _PORTA	set	5
   177     0019                     _TXREG	set	25
   178     0098                     _TXSTAbits	set	152
   179     0099                     _SPBRG	set	153
   180     0089                     _TRISE	set	137
   181     0088                     _TRISD	set	136
   182     0087                     _TRISC	set	135
   183     0086                     _TRISB	set	134
   184     0085                     _TRISA	set	133
   185     009C                     _CMCON	set	156
   186     04C1                     _TRMT	set	1217
   187                           
   188                           	psect	strings
   189     0003                     __pstrings:
   190     0003                     stringtab:
   191     0003                     __stringtab:
   192     0003                     stringcode:	
   193                           ;	String table - string pointers are 1 byte each
   194                           
   195     0003                     stringdir:
   196     0003  3000               	movlw	high stringdir
   197     0004  008A               	movwf	10
   198     0005  0804               	movf	4,w
   199     0006  0A84               	incf	4,f
   200     0007  0782               	addwf	2,f
   201     0008                     __stringbase:
   202     0008  3400               	retlw	0
   203     0009                     __end_of__stringtab:
   204     0009                     STR_1:
   205     0009  3474               	retlw	116	;'t'
   206     000A  3465               	retlw	101	;'e'
   207     000B  3473               	retlw	115	;'s'
   208     000C  3474               	retlw	116	;'t'
   209     000D  3465               	retlw	101	;'e'
   210     000E  3400               	retlw	0
   211     0009                     
   212                           	psect	cinit
   213     07FC                     start_initialization:	
   214                           ; #config settings
   215                           
   216     07FC                     __initialization:
   217     07FC                     end_of_initialization:	
   218                           ;End of C runtime variable initialization code
   219                           
   220     07FC                     __end_of__initialization:
   221     07FC  0183               	clrf	3
   222     07FD  120A  118A  2FB1   	ljmp	_main	;jump to C main() function
   223                           
   224                           	psect	cstackCOMMON
   225     0070                     __pcstackCOMMON:
   226     0070                     ?_UART_Write:
   227     0070                     ??_UART_Write:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_UART_Write_Text:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_UART_Write_Text_ln:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     UART_Write@data:	
   240                           ; 1 bytes @ 0x0
   241                           
   242                           
   243                           ; 1 bytes @ 0x0
   244     0070                     	ds	1
   245     0071                     ??_UART_Write_Text:
   246     0071                     UART_Write_Text@i:	
   247                           ; 1 bytes @ 0x1
   248                           
   249                           
   250                           ; 2 bytes @ 0x1
   251     0071                     	ds	2
   252     0073                     UART_Write_Text@text:
   253                           
   254                           ; 1 bytes @ 0x3
   255     0073                     	ds	1
   256     0074                     ??_UART_Write_Text_ln:
   257     0074                     UART_Write_Text_ln@text:	
   258                           ; 1 bytes @ 0x4
   259                           
   260                           
   261                           ; 1 bytes @ 0x4
   262     0074                     	ds	1
   263     0075                     ??_main:
   264                           
   265                           ; 1 bytes @ 0x5
   266     0075                     	ds	3
   267                           
   268                           	psect	maintext
   269     07B1                     __pmaintext:	
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   272 ;;
   273 ;; *************** function _main *****************
   274 ;; Defined at:
   275 ;;		line 35 in file "main.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : B00/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   289 ;;      Params:         0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0
   291 ;;      Temps:          3       0       0       0       0
   292 ;;      Totals:         3       0       0       0       0
   293 ;;Total ram usage:        3 bytes
   294 ;; Hardware stack levels required when called: 3
   295 ;; This function calls:
   296 ;;		_UART_Write_Text_ln
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302     07B1                     _main:	
   303                           ;psect for function _main
   304                           
   305     07B1                     l730:	
   306                           ;incstack = 0
   307                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   308                           
   309                           
   310                           ;main.c: 36:     CMCON = 0x07;
   311     07B1  3007               	movlw	7
   312     07B2  1683               	bsf	3,5	;RP0=1, select bank1
   313     07B3  1303               	bcf	3,6	;RP1=0, select bank1
   314     07B4  009C               	movwf	28	;volatile
   315     07B5                     l732:
   316                           
   317                           ;main.c: 37:     TRISA = 0x00;
   318     07B5  0185               	clrf	5	;volatile
   319     07B6                     l734:
   320                           
   321                           ;main.c: 38:     TRISB = 0x00;
   322     07B6  0186               	clrf	6	;volatile
   323                           
   324                           ;main.c: 39:     TRISC = 0x80;
   325     07B7  3080               	movlw	128
   326     07B8  0087               	movwf	7	;volatile
   327     07B9                     l736:
   328                           
   329                           ;main.c: 40:     TRISD = 0x00;
   330     07B9  0188               	clrf	8	;volatile
   331     07BA                     l738:
   332                           
   333                           ;main.c: 41:     TRISE = 0x00;
   334     07BA  0189               	clrf	9	;volatile
   335     07BB                     l740:
   336                           
   337                           ;main.c: 42:     PORTA = 0x00;
   338     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   339     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   340     07BD  0185               	clrf	5	;volatile
   341     07BE                     l742:
   342                           
   343                           ;main.c: 43:     PORTB = 0x00;
   344     07BE  0186               	clrf	6	;volatile
   345     07BF                     l744:
   346                           
   347                           ;main.c: 44:     PORTC = 0x00;
   348     07BF  0187               	clrf	7	;volatile
   349     07C0                     l746:
   350                           
   351                           ;main.c: 45:     PORTD = 0x00;
   352     07C0  0188               	clrf	8	;volatile
   353     07C1                     l748:
   354                           
   355                           ;main.c: 46:     PORTE = 0x00;
   356     07C1  0189               	clrf	9	;volatile
   357     07C2                     l750:
   358                           
   359                           ;main.c: 48:     SPBRG = 31;
   360     07C2  301F               	movlw	31
   361     07C3  1683               	bsf	3,5	;RP0=1, select bank1
   362     07C4  1303               	bcf	3,6	;RP1=0, select bank1
   363     07C5  0099               	movwf	25	;volatile
   364     07C6                     l752:
   365                           
   366                           ;main.c: 49:     TXSTAbits.SYNC = 0;
   367     07C6  1218               	bcf	24,4	;volatile
   368     07C7                     l754:
   369                           
   370                           ;main.c: 50:     TXSTAbits.TXEN = 1;
   371     07C7  1698               	bsf	24,5	;volatile
   372     07C8                     l756:
   373                           
   374                           ;main.c: 51:     RCSTAbits.SPEN = 1;
   375     07C8  1283               	bcf	3,5	;RP0=0, select bank0
   376     07C9  1303               	bcf	3,6	;RP1=0, select bank0
   377     07CA  1798               	bsf	24,7	;volatile
   378     07CB                     l758:
   379                           
   380                           ;main.c: 52:     RCSTAbits.CREN = 1;
   381     07CB  1618               	bsf	24,4	;volatile
   382     07CC                     l760:
   383                           
   384                           ;main.c: 55:         UART_Write_Text_ln("teste");
   385     07CC  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   386     07CD  120A  118A  2778  120A  118A  	fcall	_UART_Write_Text_ln
   387     07D2                     l762:
   388                           
   389                           ;main.c: 56:         PORTBbits.RB5 = 1;
   390     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   391     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   392     07D4  1686               	bsf	6,5	;volatile
   393     07D5                     l764:
   394                           
   395                           ;main.c: 57:         _delay((unsigned long)((500)*(20000000/4000.0)));
   396     07D5  300D               	movlw	13
   397     07D6  00F7               	movwf	??_main+2
   398     07D7  30AF               	movlw	175
   399     07D8  00F6               	movwf	??_main+1
   400     07D9  30B6               	movlw	182
   401     07DA  00F5               	movwf	??_main
   402     07DB                     u47:
   403     07DB  0BF5               	decfsz	??_main,f
   404     07DC  2FDB               	goto	u47
   405     07DD  0BF6               	decfsz	??_main+1,f
   406     07DE  2FDB               	goto	u47
   407     07DF  0BF7               	decfsz	??_main+2,f
   408     07E0  2FDB               	goto	u47
   409     07E1  0000               	nop
   410     07E2                     l766:
   411                           
   412                           ;main.c: 58:         UART_Write_Text_ln("teste");
   413     07E2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   414     07E3  120A  118A  2778  120A  118A  	fcall	_UART_Write_Text_ln
   415     07E8                     l768:
   416                           
   417                           ;main.c: 59:         PORTBbits.RB5 = 0;
   418     07E8  1283               	bcf	3,5	;RP0=0, select bank0
   419     07E9  1303               	bcf	3,6	;RP1=0, select bank0
   420     07EA  1286               	bcf	6,5	;volatile
   421     07EB                     l770:
   422                           
   423                           ;main.c: 60:         _delay((unsigned long)((500)*(20000000/4000.0)));
   424     07EB  300D               	movlw	13
   425     07EC  00F7               	movwf	??_main+2
   426     07ED  30AF               	movlw	175
   427     07EE  00F6               	movwf	??_main+1
   428     07EF  30B6               	movlw	182
   429     07F0  00F5               	movwf	??_main
   430     07F1                     u57:
   431     07F1  0BF5               	decfsz	??_main,f
   432     07F2  2FF1               	goto	u57
   433     07F3  0BF6               	decfsz	??_main+1,f
   434     07F4  2FF1               	goto	u57
   435     07F5  0BF7               	decfsz	??_main+2,f
   436     07F6  2FF1               	goto	u57
   437     07F7  0000               	nop
   438     07F8  2FCC               	goto	l760
   439     07F9  120A  118A  2800   	ljmp	start
   440     07FC                     __end_of_main:
   441                           
   442                           	psect	text1
   443     0778                     __ptext1:	
   444 ;; *************** function _UART_Write_Text_ln *****************
   445 ;; Defined at:
   446 ;;		line 29 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;  text            1    wreg     PTR const unsigned char 
   449 ;;		 -> STR_2(6), STR_1(6), 
   450 ;; Auto vars:     Size  Location     Type
   451 ;;  text            1    4[COMMON] PTR const unsigned char 
   452 ;;		 -> STR_2(6), STR_1(6), 
   453 ;; Return value:  Size  Location     Type
   454 ;;                  1    wreg      void 
   455 ;; Registers used:
   456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   462 ;;      Params:         0       0       0       0       0
   463 ;;      Locals:         1       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0
   465 ;;      Totals:         1       0       0       0       0
   466 ;;Total ram usage:        1 bytes
   467 ;; Hardware stack levels used: 1
   468 ;; Hardware stack levels required when called: 2
   469 ;; This function calls:
   470 ;;		_UART_Write
   471 ;;		_UART_Write_Text
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477     0778                     _UART_Write_Text_ln:	
   478                           ;psect for function _UART_Write_Text_ln
   479                           
   480                           
   481                           ;incstack = 0
   482                           ; Regs used in _UART_Write_Text_ln: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   483                           ;UART_Write_Text_ln@text stored from wreg
   484     0778  00F4               	movwf	UART_Write_Text_ln@text
   485     0779                     l724:
   486                           
   487                           ;main.c: 30:     UART_Write_Text(text);
   488     0779  0874               	movf	UART_Write_Text_ln@text,w
   489     077A  120A  118A  278C  120A  118A  	fcall	_UART_Write_Text
   490     077F                     l726:
   491                           
   492                           ;main.c: 31:     UART_Write('\r');
   493     077F  300D               	movlw	13
   494     0780  120A  118A  276C  120A  118A  	fcall	_UART_Write
   495     0785                     l728:
   496                           
   497                           ;main.c: 32:     UART_Write('\n');
   498     0785  300A               	movlw	10
   499     0786  120A  118A  276C  120A  118A  	fcall	_UART_Write
   500     078B                     l54:
   501     078B  0008               	return
   502     078C                     __end_of_UART_Write_Text_ln:
   503                           
   504                           	psect	text2
   505     078C                     __ptext2:	
   506 ;; *************** function _UART_Write_Text *****************
   507 ;; Defined at:
   508 ;;		line 22 in file "main.c"
   509 ;; Parameters:    Size  Location     Type
   510 ;;  text            1    wreg     PTR const unsigned char 
   511 ;;		 -> STR_2(6), STR_1(6), 
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  text            1    3[COMMON] PTR const unsigned char 
   514 ;;		 -> STR_2(6), STR_1(6), 
   515 ;;  i               2    1[COMMON] int 
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   525 ;;      Params:         0       0       0       0       0
   526 ;;      Locals:         3       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0
   528 ;;      Totals:         3       0       0       0       0
   529 ;;Total ram usage:        3 bytes
   530 ;; Hardware stack levels used: 1
   531 ;; Hardware stack levels required when called: 1
   532 ;; This function calls:
   533 ;;		_UART_Write
   534 ;; This function is called by:
   535 ;;		_UART_Write_Text_ln
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539     078C                     _UART_Write_Text:	
   540                           ;psect for function _UART_Write_Text
   541                           
   542                           
   543                           ;incstack = 0
   544                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   545                           ;UART_Write_Text@text stored from wreg
   546     078C  00F3               	movwf	UART_Write_Text@text
   547     078D                     l716:
   548                           
   549                           ;main.c: 23:     int i;;main.c: 24:     for(i=0;text[i]!='\0';i++){
   550     078D  01F1               	clrf	UART_Write_Text@i
   551     078E  01F2               	clrf	UART_Write_Text@i+1
   552     078F  2FA3               	goto	l722
   553     0790                     l718:
   554                           
   555                           ;main.c: 25:         UART_Write(text[i]);
   556     0790  0871               	movf	UART_Write_Text@i,w
   557     0791  0773               	addwf	UART_Write_Text@text,w
   558     0792  0084               	movwf	4
   559     0793  120A  118A  2003  120A  118A  	fcall	stringdir
   560     0798  120A  118A  276C  120A  118A  	fcall	_UART_Write
   561     079D                     l720:
   562                           
   563                           ;main.c: 26:     }
   564     079D  3001               	movlw	1
   565     079E  07F1               	addwf	UART_Write_Text@i,f
   566     079F  1803               	skipnc
   567     07A0  0AF2               	incf	UART_Write_Text@i+1,f
   568     07A1  3000               	movlw	0
   569     07A2  07F2               	addwf	UART_Write_Text@i+1,f
   570     07A3                     l722:
   571     07A3  0871               	movf	UART_Write_Text@i,w
   572     07A4  0773               	addwf	UART_Write_Text@text,w
   573     07A5  0084               	movwf	4
   574     07A6  120A  118A  2003  120A  118A  	fcall	stringdir
   575     07AB  3A00               	xorlw	0
   576     07AC  1D03               	skipz
   577     07AD  2FAF               	goto	u31
   578     07AE  2FB0               	goto	u30
   579     07AF                     u31:
   580     07AF  2F90               	goto	l718
   581     07B0                     u30:
   582     07B0                     l51:
   583     07B0  0008               	return
   584     07B1                     __end_of_UART_Write_Text:
   585                           
   586                           	psect	text3
   587     076C                     __ptext3:	
   588 ;; *************** function _UART_Write *****************
   589 ;; Defined at:
   590 ;;		line 10 in file "main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;  data            1    wreg     const unsigned char 
   593 ;; Auto vars:     Size  Location     Type
   594 ;;  data            1    0[COMMON] const unsigned char 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         1       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         1       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_UART_Write_Text
   614 ;;		_UART_Write_Text_ln
   615 ;;		_UART_Write_ln
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619     076C                     _UART_Write:	
   620                           ;psect for function _UART_Write
   621                           
   622                           
   623                           ;incstack = 0
   624                           ; Regs used in _UART_Write: [wreg]
   625                           ;UART_Write@data stored from wreg
   626     076C  00F0               	movwf	UART_Write@data
   627     076D                     l654:
   628     076D                     l39:	
   629                           ;main.c: 11:     while(!TRMT);
   630                           
   631     076D  1683               	bsf	3,5	;RP0=1, select bank1
   632     076E  1303               	bcf	3,6	;RP1=0, select bank1
   633     076F  1C98               	btfss	24,1	;volatile
   634     0770  2F72               	goto	u11
   635     0771  2F73               	goto	u10
   636     0772                     u11:
   637     0772  2F6D               	goto	l39
   638     0773                     u10:
   639     0773                     l656:
   640                           
   641                           ;main.c: 12:     TXREG = data;
   642     0773  0870               	movf	UART_Write@data,w
   643     0774  1283               	bcf	3,5	;RP0=0, select bank0
   644     0775  1303               	bcf	3,6	;RP1=0, select bank0
   645     0776  0099               	movwf	25	;volatile
   646     0777                     l42:
   647     0777  0008               	return
   648     0778                     __end_of_UART_Write:
   649     007E                     btemp	set	126	;btemp
   650     007E                     wtemp0	set	126
   651                           
   652                           	psect	idloc
   653                           
   654                           ;Config register IDLOC0 @ 0x2000
   655                           ;	unspecified, using default values
   656     2000                     	org	8192
   657     2000  3FFF               	dw	16383
   658                           
   659                           ;Config register IDLOC1 @ 0x2001
   660                           ;	unspecified, using default values
   661     2001                     	org	8193
   662     2001  3FFF               	dw	16383
   663                           
   664                           ;Config register IDLOC2 @ 0x2002
   665                           ;	unspecified, using default values
   666     2002                     	org	8194
   667     2002  3FFF               	dw	16383
   668                           
   669                           ;Config register IDLOC3 @ 0x2003
   670                           ;	unspecified, using default values
   671     2003                     	org	8195
   672     2003  3FFF               	dw	16383
   673                           
   674                           	psect	config
   675                           
   676                           ;Config register CONFIG @ 0x2007
   677                           ;	Oscillator Selection bits
   678                           ;	FOSC = HS, HS oscillator
   679                           ;	Watchdog Timer Enable bit
   680                           ;	WDTE = OFF, WDT disabled
   681                           ;	Power-up Timer Enable bit
   682                           ;	PWRTE = OFF, PWRT disabled
   683                           ;	Brown-out Reset Enable bit
   684                           ;	BOREN = OFF, BOR disabled
   685                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   686                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   687                           ;	Data EEPROM Memory Code Protection bit
   688                           ;	CPD = OFF, Data EEPROM code protection off
   689                           ;	Flash Program Memory Write Enable bits
   690                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   691                           ;	In-Circuit Debugger Mode bit
   692                           ;	DEBUG = 0x1, unprogrammed default
   693                           ;	Flash Program Memory Code Protection bit
   694                           ;	CP = OFF, Code protection off
   695     2007                     	org	8199
   696     2007  3F3A               	dw	16186

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Write_Text_ln@text	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    UART_Write_Text@text	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_UART_Write_Text_ln
    _UART_Write_Text_ln->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     241
                                              5 COMMON     3     3      0
                 _UART_Write_Text_ln
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text_ln                                   1     1      0     241
                                              4 COMMON     1     1      0
                         _UART_Write
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      3     3      0     138
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Write_Text_ln
     _UART_Write
     _UART_Write_Text
       _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Feb 28 09:49:38 2024

                         pc 0002                          l42 0777                          l51 07B0  
                        l54 078B                          l39 076D                          u10 0773  
                        u11 0772                          u30 07B0                          u31 07AF  
                        u47 07DB                          u57 07F1                          fsr 0004  
                       l720 079D                         l722 07A3                         l730 07B1  
                       l716 078D                         l724 0779                         l740 07BB  
                       l732 07B5                         l654 076D                         l718 0790  
                       l726 077F                         l750 07C2                         l742 07BE  
                       l734 07B6                         l656 0773                         l728 0785  
                       l760 07CC                         l752 07C6                         l744 07BF  
                       l736 07B9                         l770 07EB                         l762 07D2  
                       l754 07C7                         l746 07C0                         l738 07BA  
                       l764 07D5                         l756 07C8                         l748 07C1  
                       l766 07E2                         l758 07CB                         l768 07E8  
                       fsr0 0004                        STR_1 0009                        STR_2 0009  
                      _TRMT 04C1                        _main 07B1                        btemp 007E  
                      start 0000     __end_of_UART_Write_Text 07B1                       ?_main 0070  
                     _CMCON 009C                       _SPBRG 0099                       _PORTA 0005  
                     _PORTB 0006                       _PORTC 0007                       _PORTD 0008  
                     _PORTE 0009                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
                     _TXREG 0019                 ?_UART_Write 0070                       pclath 000A  
                     status 0003                       wtemp0 007E             __initialization 07FC  
              __end_of_main 07FC                      ??_main 0075            ?_UART_Write_Text 0070  
   __end_of__initialization 07FC              __pcstackCOMMON 0070                  __pmaintext 07B1  
__end_of_UART_Write_Text_ln 078C                ??_UART_Write 0070                  __stringtab 0003  
        __end_of_UART_Write 0778                     __ptext1 0778                     __ptext2 078C  
                   __ptext3 076C        end_of_initialization 07FC                   _RCSTAbits 0018  
                 _PORTBbits 0006              UART_Write@data 0070                   _TXSTAbits 0098  
       start_initialization 07FC                   ___latbits 0002          _UART_Write_Text_ln 0778  
       ?_UART_Write_Text_ln 0070                   __pstrings 0003        ??_UART_Write_Text_ln 0074  
         ??_UART_Write_Text 0071                 __stringbase 0008          __end_of__stringtab 0009  
       UART_Write_Text@text 0073      UART_Write_Text_ln@text 0074                   stringcode 0003  
           _UART_Write_Text 078C                    stringdir 0003                    stringtab 0003  
                _UART_Write 076C            UART_Write_Text@i 0071  
